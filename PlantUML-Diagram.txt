@startuml
abstract class Account {

#Profile holder
#boolean closed
#double balance

+boolean equals(Object o)
+String toString()

+void withdraw(double amount)
+void deposit(double amount)
+void changeState()
+void setBalance()
+Profile getHolder()
+{abstract} double monthlyInterest()
+{abstract} double fee()
+{abstract} String getType()
}

class Checking {

+double monthlyInterest()
+double fee()
+String getType()

}

class CollegeChecking {
-int campusCode

+String getCampus()
+int getCode()
+void changeCampus(int campusCode)
+String toString()
+double monthlyInterest()
+double fee()
+String getType()

}


class Savings {
#int loyalty

+void changeLoyalty(int loyalty)
+void getLoyalty()
+String isLoyal()
+String toString()
+double monthlyInterest()
+double fee()
+String getType()

}


class MoneyMarket {
-int withdrawals

+void addWithdrawal()
+int getWithdrawals()
+void resetWithdrawals()
+String toString()
+double monthlyInterest()
+double fee()
+String getType()

}

class Profile {

-String fname
-String lname
-Date dob

+boolean equals(Object obj)
+String toString()
}

class AccountDatabase {

-Account[] accounts
-int numAcct

+AccountDatabase()

+boolean open(Account account)
+boolean close(Account account)
+void deposit(Account account)
+boolean withdraw(Account account)
+void print()
+void sortType(Accounts[] accounts)
+void printByAccountType()
+void printFeeAndInterest()
+void update()
}

class BankTeller {

+void run()

}

class Date {

-int year
-int month
-int day

+Date(String date)

+int compareTo(Date date)
+String toString()
+boolean isValid()
+boolean inArray(int[] arr, int valueToCheck)
+boolean isLeapYear(int year)
+boolean isThirtyOne(int month)
+boolean isThirty(int month)
}

BankTeller -- AccountDatabase : uses >
AccountDatabase "0..n" o-- "1" Account
Account <|-- Checking
Account <|-- Savings
Checking <|-- CollegeChecking
Savings <|-- MoneyMarket
Account "0..4" o-- "1" Profile
Date <-- Profile
@enduml